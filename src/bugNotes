handling state through multiple components is tedious - need to learn Redux. 
also plan out routes thoroughly at beginning, so you don't have to redo everything painfully later
can use params with query prop when using axios to get to pass through data e.g. username

using routeprops and render prop helps to render props through route components 

nesting axios get, post, get using .then solves async update issues

newArray.push() - bug, returning number, because assigning Array.push() TO A VARIABLE does that, but just using push on the array actually pushes the item, modifying the original array


BUG: mybeers rating update re-ordering issue - when updating rating, order of identical items in list would change, following receiving the updated list (with no order) from db, then re-ordering using sort. so essentially, running a new sort on the unsorted list.
SOLUTION: when updating a rating, just return the updated beer from db, then splice into current ordered list on the client side.
At first, I thought it was sort being unstable, however after fixing that, then realising it was fixing anyway with ECMA2019, i then realised the problem lay elsewhere.

BUG: need dynamic heights of hidden div offset for smooth scroll effect, based on sized of text
SOLUTION: useEffect and useCallback to listen for window resize, then update height of covering div,


takes two clicks to change order when changing category
FIX: needed to useEffect to ensure update once category/order type had changed - moved action to useEffect

TODO:
fix asc/des icon - DONE
fix search sort spacing
add grouping function, add wishlist - make add to favourites a drop down
